version: '3.4'

services:

  envoy:
    image: envoyproxy/envoy:v1.16.5
    container_name: envoy
    restart: always

  #backoffice:
  #  image: ${DOCKER_REGISTRY:-schoolmngr}/backoffice:${PLATFORM:-linux}-${TAG:-latest}
  #  container_name: backoffice
  #  build:
  #    context: .
  #    dockerfile: microservices/admin/SchoolMngr.Services.Backoffice/Dockerfile
  #  depends_on:
  #    - postgressql
  #    - rabbitmq

  #academe:
  #  image: ${DOCKER_REGISTRY:-schoolmngr}/academe:${PLATFORM:-linux}-${TAG:-latest}
  #  container_name: academe
  #  build:
  #    context: .
  #    dockerfile: microservices/academe/SchoolMngr.Services.Academe/Dockerfile
  #  depends_on:
  #    - postgressql
  #    - rabbitmq

  notifications:
    image: ${DOCKER_REGISTRY:-schoolmngr}/notifications:${PLATFORM:-linux}-${TAG:-latest}
    container_name: SchoolMngr.Notifications
    build:
      context: .
      dockerfile: microservices/notifications/SchoolMngr.Services.Notifications/Dockerfile
    depends_on:
      - rabbitmq

  postgressql:
    image: postgres
    container_name: postgressql
    restart: always

  elasticsearch:
     image: docker.elastic.co/elasticsearch/elasticsearch:7.9.0-amd64
     container_name: elasticsearch

  kibana:
     image: docker.elastic.co/kibana/kibana:7.9.0
     container_name: kibana

  rabbitmq:
     image: rabbitmq:3-management-alpine
     container_name: rabbitmq

networks:
  esnet:

volumes:
  postgressql-data:
  elasticsearch-data: